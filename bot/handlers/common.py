"""–û–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞."""

from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from bot.keyboards import get_main_menu_keyboard
from bot.states import MAIN_MENU
from database.db import Database
from config import ADMIN_ID

db = Database()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user = update.effective_user
    user_record = db.get_user(user.id)
    
    if not user_record:
        role = "admin" if user.id in ADMIN_ID else "guest"
        db.save_user(user.id, user.first_name or "", user.last_name or "", "", "", 0, "", role)
        if role == "admin":
            await update.message.reply_markdown("*‚úÖ –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.* üéâ")
        else:
            await update.message.reply_markdown("*üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≥–æ—Å—Ç—å!*")
    else:
        if user_record.get("role") == "user" and user.id in ADMIN_ID:
            db.update_user_role(user.id, "admin")
        if user_record.get("role") == "admin":
            await update.message.reply_markdown("*üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!*")
        else:
            await update.message.reply_markdown("*üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!*")
    
    role = db.get_user(user.id).get("role", "guest")
    keyboard = get_main_menu_keyboard(role)
    await update.message.reply_markdown("*üìå –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:*", reply_markup=keyboard)
    return MAIN_MENU

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel."""
    await update.message.reply_markdown("*‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.*")
    role = db.get_user(update.effective_user.id).get("role", "user")
    keyboard = get_main_menu_keyboard(role)
    await update.message.reply_markdown("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=keyboard)
    return MAIN_MENU
